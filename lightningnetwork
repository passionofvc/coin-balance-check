(please configure the [header_logo] section in trac.ini)
 
LoginPreferencesHelp/GuideAbout Trac
WikiTimelineRoadmapBrowse SourceView TicketsSearch
wiki:TracIni
Start PageIndexHistory
The Trac Configuration File
Table of Contents
Index
Installation
Customization
Plugins
Upgrading
Configuration
Administration
Backup
Logging
Permissions
The Wiki
Wiki Formatting
Timeline
Repository Browser
Revision Log
Changesets
Tickets
Workflow
Roadmap
Ticket Queries
Batch Modify
Reports
RSS Support
Notification
Contents
Global Configuration
Reference for settings
Trac is configured through the trac.ini file, located in the <projectenv>/conf directory. The trac.ini configuration file and its parent directory should be writable by the web server.

Trac monitors the timestamp of the file to trigger a complete environment reload and flush its caches when the timestamp changes. Most changes to the configuration will be reflected immediately, though changes to the [components] or [logging] sections will require restarting the web server. You may also need to restart the web server after creating a global configuration file when none was previously present.

Global Configuration
Configuration can be shared among environments using one or more global configuration files. Options in the global configuration will be merged with the environment-specific options, with local options overriding global options. The global configuration file is specified as follows:

[inherit]
file = /path/to/global/trac.ini
Multiple files can be specified using a comma-separated list.

Note that you can also specify a global option file when creating a new project, by adding the option --inherit=/path/to/global/trac.ini to trac-admin's initenv command. If you do not do this but nevertheless intend to use a global option file with your new environment, you will have to go through the newly generated conf/trac.ini file and delete the entries that will otherwise override those set in the global file.

There are two more entries in the [inherit] section, templates_dir for sharing global templates and plugins_dir, for sharing plugins. Those entries can themselves be specified in the shared configuration file, and in fact, configuration files can even be chained if you specify another [inherit] file there.

Note that the templates found in the templates/ directory of the TracEnvironment have precedence over those found in [inherit] templates_dir. In turn, the latter have precedence over the installed templates, so be careful about what you put there. Notably, if you override a default template, refresh your modifications when you upgrade to a new version of Trac. The preferred way to perform TracInterfaceCustomization is still to write a custom plugin doing an appropriate ITemplateStreamFilter transformation.

Reference for settings
This is a brief reference of available configuration options, and their default settings.

Documentation improvements should be discussed on the ​trac-dev mailing list or described in a ​ticket. Even better, ​submit a patch against the docstrings in the code.

[attachment]
max_size	Maximum allowed file size (in bytes) for attachments.	262144
max_zip_size	Maximum allowed total size (in bytes) for an attachment list to be downloadable as a .zip. Set this to -1 to disable download as .zip. (since 1.0)	2097152
render_unsafe_content	Whether attachments should be rendered in the browser, or only made downloadable. Pretty much any file may be interpreted as HTML by the browser, which allows a malicious user to attach a file containing cross-site scripting attacks. For public sites where anonymous users can create attachments it is recommended to leave this option disabled (which is the default).	false
[browser]
color_scale	Enable colorization of the age column. This uses the same color scale as the source code annotation: blue is older, red is newer. (since 0.11)	enabled
downloadable_paths	List of repository paths that can be downloaded. Leave this option empty if you want to disable all downloads, otherwise set it to a comma-separated list of authorized paths (those paths are glob patterns, i.e. "*" can be used as a wild card). In a multi-repository environment, the path must be qualified with the repository name if the path does not point to the default repository (e.g. /reponame/trunk). Note that a simple prefix matching is performed on the paths, so aliases won't get automatically resolved. (since 0.10)	/trunk, /branches/*, /tags/*
hide_properties	Comma-separated list of version control properties to hide from the repository browser. (since 0.9)	svk:merge
intermediate_color	(r,g,b) color triple to use for the color corresponding to the intermediate color, if two linear interpolations are used for the color scale (see intermediate_point). If not set, the intermediate color between oldest_color and newest_color will be used. (since 0.11)	(no default)
intermediate_point	If set to a value between 0 and 1 (exclusive), this will be the point chosen to set the intermediate_color for interpolating the color value. (since 0.11)	(no default)
newest_color	(r,g,b) color triple to use for the color corresponding to the newest color, for the color scale used in blame or the browser age column if color_scale is enabled. (since 0.11)	(255, 136, 136)
oldest_color	(r,g,b) color triple to use for the color corresponding to the oldest color, for the color scale used in blame or the browser age column if color_scale is enabled. (since 0.11)	(136, 136, 255)
oneliner_properties	Comma-separated list of version control properties to render as oneliner wiki content in the repository browser. (since 0.11)	trac:summary
render_unsafe_content	Whether raw files should be rendered in the browser, or only made downloadable. Pretty much any file may be interpreted as HTML by the browser, which allows a malicious user to create a file containing cross-site scripting attacks. For open repositories where anyone can check-in a file, it is recommended to leave this option disabled (which is the default).	false
wiki_properties	Comma-separated list of version control properties to render as wiki content in the repository browser. (since 0.11)	trac:description
[changeset]
max_diff_bytes	Maximum total size in bytes of the modified files (their old size plus their new size) for which the changeset view will attempt to show the diffs inlined (since 0.10).	10000000
max_diff_files	Maximum number of modified files for which the changeset view will attempt to show the diffs inlined (since 0.10).	0
wiki_format_messages	Whether wiki formatting should be applied to changeset messages. If this option is disabled, changeset messages will be rendered as pre-formatted text.	true
[components]
This section is used to enable or disable components provided by plugins, as well as by Trac itself. The component to enable/disable is specified via the name of the option. Whether its enabled is determined by the option value; setting the value to enabled or on will enable the component, any other value (typically disabled or off) will disable the component.

The option name is either the fully qualified name of the components or the module/package prefix of the component. The former enables/disables a specific component, while the latter enables/disables any component in the specified package/module.

Consider the following configuration snippet:

[components]
trac.ticket.report.ReportModule = disabled
webadmin.* = enabled
The first option tells Trac to disable the report module. The second option instructs Trac to enable all components in the webadmin package. Note that the trailing wildcard is required for module/package matching.

To view the list of active components, go to the Plugins page on About Trac (requires CONFIG_VIEW permissions).

See also: TracPlugins

[header_logo]
alt	Alternative text for the header logo.	(please configure the [header_logo] section in trac.ini)
height	Height of the header logo image in pixels.	-1
link	URL to link to, from the header logo.	(no default)
src	URL of the image to use as header logo. It can be absolute, server relative or relative. If relative, it is relative to one of the /chrome locations: site/your-logo.png if your-logo.png is located in the htdocs folder within your TracEnvironment; common/your-logo.png if your-logo.png is located in the folder mapped to the htdocs_location URL. Only specifying your-logo.png is equivalent to the latter.	site/your_project_logo.png
width	Width of the header logo image in pixels.	-1
[inherit]
htdocs_dir	Path to the shared htdocs directory. Static resources in that directory are mapped to /chrome/shared under the environment URL, in addition to common and site locations. This can be useful in site.html for common interface customization of multiple Trac environments. (since 1.0)	(no default)
plugins_dir	Path to the shared plugins directory. Plugins in that directory are loaded in addition to those in the directory of the environment plugins, with this one taking precedence. (since 0.11)	(no default)
templates_dir	Path to the shared templates directory. Templates in that directory are loaded in addition to those in the environments templates directory, but the latter take precedence. (since 0.11)	(no default)
[intertrac]
This section configures InterTrac prefixes. Options in this section whose name contain a "." define aspects of the InterTrac prefix corresponding to the option name up to the ".". Options whose name don't contain a "." define an alias.

The .url is mandatory and is used for locating the other Trac. This can be a relative URL in case that Trac environment is located on the same server.

The .title information is used for providing a useful tooltip when moving the cursor over an InterTrac link.

The .compat option can be used to activate or disable a compatibility mode:

If the targeted Trac is running a version below​0.10 (​r3526 to be precise), then it doesn't know how to dispatch an InterTrac link, and it's up to the local Trac to prepare the correct link. Not all links will work that way, but the most common do. This is called the compatibility mode, and is false by default.
If you know that the remote Trac knows how to dispatch InterTrac links, you can explicitly disable this compatibility mode and then any TracLinks can become InterTrac links.
Example configuration:

[intertrac]
# -- Example of setting up an alias:
t = trac

# -- Link to an external Trac:
trac.title = Edgewall's Trac for Trac
trac.url = http://trac.edgewall.org
[interwiki]
Every option in the [interwiki] section defines one InterWiki prefix. The option name defines the prefix. The option value defines the URL, optionally followed by a description separated from the URL by whitespace. Parametric URLs are supported as well.

Example:

[interwiki]
MeatBall = http://www.usemod.com/cgi-bin/mb.pl?
PEP = http://www.python.org/peps/pep-$1.html Python Enhancement Proposal $1
tsvn = tsvn: Interact with TortoiseSvn
[logging]
log_file	If log_type is file, this should be a path to the log-file. Relative paths are resolved relative to the log directory of the environment.	trac.log
log_format	Custom logging format. If nothing is set, the following will be used: Trac[$(module)s] $(levelname)s: $(message)s In addition to regular key names supported by the Python logger library (see​http://docs.python.org/library/logging.html), one could use: - $(path)s the path for the current environment - $(basename)s the last path component of the current environment - $(project)s the project name Note the usage of $(...)s instead of %(...)s as the latter form would be interpreted by the ConfigParser? itself. Example: ($(thread)d) Trac[$(basename)s:$(module)s] $(levelname)s: $(message)s (since 0.10.5)	(no default)
log_level	Level of verbosity in log. Should be one of (CRITICAL, ERROR, WARN, INFO, DEBUG).	DEBUG
log_type	Logging facility to use. Should be one of (none, file, stderr, syslog, winlog).	none
[milestone]
stats_provider	Name of the component implementing ITicketGroupStatsProvider, which is used to collect statistics on groups of tickets for display in the milestone views.	DefaultTicketGroupStatsProvider
[milestone-groups]
As the workflow for tickets is now configurable, there can be many ticket states, and simply displaying closed tickets vs. all the others is maybe not appropriate in all cases. This section enables one to easily create groups of states that will be shown in different colors in the milestone progress bar.

Note that the groups can only be based on the ticket status, nothing else. In particular, it's not possible to distinguish between different closed tickets based on the resolution.

Example configuration with three groups, closed, new and active (the default only has closed and active):

# the 'closed' group correspond to the 'closed' tickets
closed = closed

# .order: sequence number in the progress bar
closed.order = 0

# .query_args: optional parameters for the corresponding
#              query.  In this example, the changes from the
#              default are two additional columns ('created' and
#              'modified'), and sorting is done on 'created'.
closed.query_args = group=resolution,order=time,col=id,col=summary,col=owner,col=type,col=priority,col=component,col=severity,col=time,col=changetime

# .overall_completion: indicates groups that count for overall
#                      completion percentage
closed.overall_completion = true

new = new
new.order = 1
new.css_class = new
new.label = new

# Note: one catch-all group for other statuses is allowed
active = *
active.order = 2

# .css_class: CSS class for this interval
active.css_class = open

# .label: displayed label for this group
active.label = in progress
The definition consists in a comma-separated list of accepted status. Also, '*' means any status and could be used to associate all remaining states to one catch-all group.

The CSS class can be one of: new (yellow), open (no color) or closed (green). Other styles can easily be added using custom CSS rule: table.progress td.<class> { background: <color> } to a site/style.css file for example.

(since 0.11)

[mimeviewer]
max_preview_size	Maximum file size for HTML preview. (since 0.9)	262144
mime_map	List of additional MIME types and keyword mappings. Mappings are comma-separated, and for each MIME type, there's a colon (":") separated list of associated keywords or file extensions. (since 0.10)	text/x-dylan:dylan, text/x-idl:ice, text/x-ada:ads:adb
mime_map_patterns	List of additional MIME types associated to filename patterns. Mappings are comma-separated, and each mapping consists of a MIME type and a Python regexp used for matching filenames, separated by a colon (":"). (since 1.0)	text/plain:README|INSTALL|COPYING.*
pygments_default_style	The default style to use for Pygments syntax highlighting.	trac
pygments_modes	List of additional MIME types known by Pygments. For each, a tuple mimetype:mode:quality has to be specified, where mimetype is the MIME type, mode is the corresponding Pygments mode to be used for the conversion and quality is the quality ratio associated to this conversion. That can also be used to override the default quality ratio used by the Pygments render.	(no default)
tab_width	Displayed tab width in file preview. (since 0.9)	8
treat_as_binary	Comma-separated list of MIME types that should be treated as binary data. (since 0.11.5)	application/octet-stream, application/pdf, application/postscript, application/msword,application/rtf,
[notification]
admit_domains	Comma-separated list of domains that should be considered as valid for email addresses (such as localdomain).	(no default)
always_notify_owner	Always send notifications to the ticket owner (since 0.9).	false
always_notify_reporter	Always send notifications to any address in the reporter field.	false
always_notify_updater	Always send notifications to the person who causes the ticket property change and to any previous updater of that ticket.	true
ambiguous_char_width	Which width of ambiguous characters (e.g. 'single' or 'double') should be used in the table of notification mail. If 'single', the same width as characters in US-ASCII. This is expected by most users. If 'double', twice the width of US-ASCII characters. This is expected by CJK users. (since 0.12.2)	single
batch_subject_template	Like ticket_subject_template but for batch modifications. By default, the template is $prefix Batch modify: $tickets_descr. (since 1.0)	$prefix Batch modify: $tickets_descr
email_sender	Name of the component implementing IEmailSender. This component is used by the notification system to send emails. Trac currently provides SmtpEmailSender for connecting to an SMTP server, and SendmailEmailSender for running a sendmail-compatible executable. (since 0.12)	SmtpEmailSender
ignore_domains	Comma-separated list of domains that should not be considered part of email addresses (for usernames with Kerberos domains).	(no default)
mime_encoding	Specifies the MIME encoding scheme for emails. Valid options are 'base64' for Base64 encoding, 'qp' for Quoted-Printable, and 'none' for no encoding, in which case mails will be sent as 7bit if the content is all ASCII, or 8bit otherwise. (since 0.10)	none
sendmail_path	Path to the sendmail executable. The sendmail program must accept the -i and -f options. (since 0.12)	sendmail
smtp_always_bcc	Email address(es) to always send notifications to, addresses do not appear publicly (Bcc:). (since 0.10)	(no default)
smtp_always_cc	Email address(es) to always send notifications to, addresses can be seen by all recipients (Cc:).	(no default)
smtp_default_domain	Default host/domain to append to address that do not specify one.	(no default)
smtp_enabled	Enable email notification.	false
smtp_from	Sender address to use in notification emails.	trac@localhost
smtp_from_author	Use the action author as the sender of notification emails. (since 1.0)	false
smtp_from_name	Sender name to use in notification emails.	(no default)
smtp_password	Password for SMTP server. (since 0.9)	(no default)
smtp_port	SMTP server port to use for email notification.	25
smtp_replyto	Reply-To address to use in notification emails.	trac@localhost
smtp_server	SMTP server hostname to use for email notifications.	localhost
smtp_subject_prefix	Text to prepend to subject line of notification emails. If the setting is not defined, then the [$project_name] prefix. If no prefix is desired, then specifying an empty option will disable it. (since 0.10.1)	__default__
smtp_user	Username for SMTP server. (since 0.9)	(no default)
ticket_subject_template	A Genshi text template snippet used to get the notification subject. By default, the subject template is $prefix #$ticket.id: $summary. $prefix being the value of the smtp_subject_prefix option. (since 0.11)	$prefix #$ticket.id: $summary
use_public_cc	Recipients can see email addresses of other CC'ed recipients. If this option is disabled (the default), recipients are put on BCC. (since 0.10)	false
use_short_addr	Permit email address without a host/domain (i.e. username only). The SMTP server should accept those addresses, and either append a FQDN or use local delivery. (since 0.10)	false
use_tls	Use SSL/TLS to send notifications over SMTP. (since 0.10)	false
[project]
admin	E-Mail address of the project's administrator.	(no default)
admin_trac_url	Base URL of a Trac instance where errors in this Trac should be reported. This can be an absolute or relative URL, or '.' to reference this Trac instance. An empty value will disable the reporting buttons. (since 0.11.3)	.
descr	Short description of the project.	My example project
footer	Page footer text (right-aligned).	Visit the Trac open source project at<br /><a href="http://trac.edgewall.org/">http://trac.edgewall.org/</a>
icon	URL of the icon of the project.	common/trac.ico
name	Name of the project.	My Project
url	URL of the main project web site, usually the website in which the base_url resides. This is used in notification e-mails.	(no default)
[query]
default_anonymous_query	The default query for anonymous users. The query is either in query language syntax, or a URL query string starting with ? as used in query: Trac links. (since 0.11.2)	status!=closed&cc~=$USER
default_query	The default query for authenticated users. The query is either in query language syntax, or a URL query string starting with ? as used in query: Trac links. (since 0.11.2)	status!=closed&owner=$USER
items_per_page	Number of tickets displayed per page in ticket queries, by default (since 0.11)	100
ticketlink_query	The base query to be used when linkifying values of ticket fields. The query is a URL query string starting with ? as used in query: Trac links. (since 0.12)	?status=!closed
[report]
items_per_page	Number of tickets displayed per page in ticket reports, by default (since 0.11)	100
items_per_page_rss	Number of tickets displayed in the rss feeds for reports (since 0.11)	0
[repositories]
One of the alternatives for registering new repositories is to populate the [repositories] section of the trac.ini.

This is especially suited for setting up convenience aliases, short-lived repositories, or during the initial phases of an installation.

See TracRepositoryAdmin for details about the format adopted for this section and the rest of that page for the other alternatives.

(since 0.12)

[revisionlog]
default_log_limit	Default value for the limit argument in the TracRevisionLog. (since 0.11)	100
graph_colors	Comma-separated list of colors to use for the TracRevisionLog graph display. (since 1.0)	#cc0,#0c0,#0cc,#00c,#c0c,#c00
[roadmap]
stats_provider	Name of the component implementing ITicketGroupStatsProvider, which is used to collect statistics on groups of tickets for display in the roadmap views.	DefaultTicketGroupStatsProvider
[search]
default_disabled_filters	Specifies which search filters should be disabled by default on the search page. This will also restrict the filters for the quick search function. The filter names defined by default components are: wiki, ticket, milestone and changeset. For plugins, look for their implementation of the ISearchSource interface, in the get_search_filters() method, the first member of returned tuple. Once disabled, search filters can still be manually enabled by the user on the search page. (since 0.12)	(no default)
min_query_length	Minimum length of query string allowed when performing a search.	3
[sqlite]
extensions	Paths to sqlite extensions, relative to Trac environment's directory or absolute. (since 0.12)	(no default)
[svn]
branches	Comma separated list of paths categorized as branches. If a path ends with '*', then all the directory entries found below that path will be included. Example: /trunk, /branches/*, /projectAlpha/trunk, /sandbox/*	trunk, branches/*
eol_style	End-of-Line character sequences when svn:eol-style property is native. If native (the default), substitute with the native EOL marker on the server. Otherwise, if LF, CRLF or CR, substitute with the specified EOL marker. (since 1.0.2)	native
tags	Comma separated list of paths categorized as tags. If a path ends with '*', then all the directory entries found below that path will be included. Example: /tags/*, /projectAlpha/tags/A-1.0, /projectAlpha/tags/A-v1.1	tags/*
[svn:externals]
The TracBrowser for Subversion can interpret the svn:externals property of folders. By default, it only turns the URLs into links as Trac can't browse remote repositories.

However, if you have another Trac instance (or an other repository browser like ​ViewVC) configured to browse the target repository, then you can instruct Trac which other repository browser to use for which external URL. This mapping is done in the [svn:externals] section of the TracIni.

Example:

[svn:externals]
1 = svn://server/repos1                       http://trac/proj1/browser/$path?rev=$rev
2 = svn://server/repos2                       http://trac/proj2/browser/$path?rev=$rev
3 = http://theirserver.org/svn/eng-soft       http://ourserver/viewvc/svn/$path/?pathrev=25914
4 = svn://anotherserver.com/tools_repository  http://ourserver/tracs/tools/browser/$path?rev=$rev
With the above, the svn://anotherserver.com/tools_repository/tags/1.1/tools external will be mapped to http://ourserver/tracs/tools/browser/tags/1.1/tools?rev= (and rev will be set to the appropriate revision number if the external additionally specifies a revision, see the​SVN Book on externals for more details).

Note that the number used as a key in the above section is purely used as a place holder, as the URLs themselves can't be used as a key due to various limitations in the configuration file parser.

Finally, the relative URLs introduced in​Subversion 1.5 are not yet supported.

(since 0.11)

[ticket]
default_cc	Default cc: list for newly created tickets.	(no default)
default_component	Default component for newly created tickets.	(no default)
default_description	Default description for newly created tickets.	(no default)
default_keywords	Default keywords for newly created tickets.	(no default)
default_milestone	Default milestone for newly created tickets.	(no default)
default_owner	Default owner for newly created tickets.	< default >
default_priority	Default priority for newly created tickets.	major
default_resolution	Default resolution for resolving (closing) tickets (since 0.11).	fixed
default_severity	Default severity for newly created tickets.	(no default)
default_summary	Default summary (title) for newly created tickets.	(no default)
default_type	Default type for newly created tickets (since 0.9).	defect
default_version	Default version for newly created tickets.	(no default)
max_comment_size	Maximum allowed comment size in characters. (since 0.11.2).	262144
max_description_size	Maximum allowed description size in characters. (since 0.11).	262144
max_summary_size	Maximum allowed summary size in characters. (since 1.0.2).	262144
preserve_newlines	Whether Wiki formatter should respect the new lines present in the Wiki text. If set to 'default', this is equivalent to 'yes' for new environments but keeps the old behavior for upgraded environments (i.e. 'no'). (since 0.11).	default
restrict_owner	Make the owner field of tickets use a drop-down menu. Be sure to understand the performance implications before activating this option. See Assign-to as Drop-Down List. Please note that e-mail addresses are not obfuscated in the resulting drop-down menu, so this option should not be used if e-mail addresses must remain protected. (since 0.9)	false
workflow	Ordered list of workflow controllers to use for ticket actions (since 0.11).	ConfigurableTicketWorkflow
[ticket-custom]
In this section, you can define additional fields for tickets. See TracTicketsCustomFields for more details.

[ticket-workflow]
The workflow for tickets is controlled by plugins. By default, there's only a ConfigurableTicketWorkflow component in charge. That component allows the workflow to be configured via this section in the trac.ini file. See TracWorkflow for more details.

(since 0.11)

[timeline]
abbreviated_messages	Whether wiki-formatted event messages should be truncated or not. This only affects the default rendering, and can be overriden by specific event providers, see their own documentation. (Since 0.11)	enabled
changeset_collapse_events	Whether consecutive changesets from the same author having exactly the same message should be presented as one event. That event will link to the range of changesets in the log view. (since 0.11)	false
changeset_long_messages	Whether wiki-formatted changeset messages should be multiline or not. If this option is not specified or is false and wiki_format_messages is set to true, changeset messages will be single line only, losing some formatting (bullet points, etc).	false
changeset_show_files	Number of files to show (-1 for unlimited, 0 to disable). This can also be location, for showing the common prefix for the changed files. (since 0.11).	0
default_daysback	Default number of days displayed in the Timeline, in days. (since 0.9.)	30
max_daysback	Maximum number of days (-1 for unlimited) displayable in the Timeline. (since 0.11)	90
newticket_formatter	Which formatter flavor (e.g. 'html' or 'oneliner') should be used when presenting the description for new tickets. If 'oneliner', the [timeline] abbreviated_messages option applies. (since 0.11).	oneliner
ticket_show_details	Enable the display of all ticket changes in the timeline, not only open / close operations (since 0.9).	false
[trac]
auth_cookie_lifetime	Lifetime of the authentication cookie, in seconds. This value determines how long the browser will cache authentication information, and therefore, after how much inactivity a user will have to log in again. The default value of 0 makes the cookie expire at the end of the browsing session. (since 0.12)	0
auth_cookie_path	Path for the authentication cookie. Set this to the common base path of several Trac instances if you want them to share the cookie. (since 0.12)	(no default)
authz_file	The path to the Subversion​authorization (authz) file. To enable authz permission checking, the AuthzSourcePolicy permission policy must be added to [trac] permission_policies.	(no default)
authz_module_name	The module prefix used in the authz_file for the default repository. If left empty, the global section is used.	(no default)
auto_preview_timeout	Inactivity timeout in seconds after which the automatic wiki preview triggers an update. This option can contain floating-point values. The lower the setting, the more requests will be made to the server. Set this to 0 to disable automatic preview. The default is 2.0 seconds. (since 0.12)	2.0
auto_reload	Automatically reload template files after modification.	disabled
backup_dir	Database backup location	db
base_url	Reference URL for the Trac deployment. This is the base URL that will be used when producing documents that will be used outside of the web browsing context, like for example when inserting URLs pointing to Trac resources in notification e-mails.	(no default)
check_auth_ip	Whether the IP address of the user should be checked for authentication (since 0.9).	false
database	Database connection string for this project	sqlite:db/trac.db
debug_sql	Show the SQL queries in the Trac log, at DEBUG level. (Since 0.11.5)	disabled
default_charset	Charset to be used when in doubt.	utf-8
default_date_format	The date format. Valid options are 'iso8601' for selecting ISO 8601 format, or leave it empty which means the default date format will be inferred from the browser's default language. (since 1.0)	(no default)
default_dateinfo_format	The date information format. Valid options are 'relative' for displaying relative format and 'absolute' for displaying absolute format. (since 1.0)	relative
default_handler	Name of the component that handles requests to the base URL. Options include TimelineModule, RoadmapModule, BrowserModule, QueryModule, ReportModule, TicketModule and WikiModule. The default is WikiModule. (since 0.9)	WikiModule
default_language	The preferred language to use if no user preference has been set. (since 0.12.1)	(no default)
default_timezone	The default timezone to use	(no default)
genshi_cache_size	The maximum number of templates that the template loader will cache in memory. The default value is 128. You may want to choose a higher value if your site uses a larger number of templates, and you have enough memory to spare, or you can reduce it if you are short on memory.	128
htdocs_location	Base URL for serving the core static resources below /chrome/common/. It can be left empty, and Trac will simply serve those resources itself. Advanced users can use this together with trac-admin ... deploy <deploydir> to allow serving the static resources for Trac directly from the web server. Note however that this only applies to the <deploydir>/htdocs/common directory, the other deployed resources (i.e. those from plugins) will not be made available this way and additional rewrite rules will be needed in the web server.	(no default)
ignore_auth_case	Whether login names should be converted to lower case (since 0.9).	false
jquery_location	Location of the jQuery JavaScript library (version 1.7.2). An empty value loads jQuery from the copy bundled with Trac. Alternatively, jQuery could be loaded from a CDN, for example:​http://code.jquery.com/jquery-1.7.2.min.js,​http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.7.2.min.js or​https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js. (since 1.0)	(no default)
jquery_ui_location	Location of the jQuery UI JavaScript library (version 1.8.21). An empty value loads jQuery UI from the copy bundled with Trac. Alternatively, jQuery UI could be loaded from a CDN, for example:​https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.21/jquery-ui.min.js or​http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.21/jquery-ui.min.js. (since 1.0)	(no default)
jquery_ui_theme_location	Location of the theme to be used with the jQuery UI JavaScript library (version 1.8.21). An empty value loads the custom Trac jQuery UI theme from the copy bundled with Trac. Alternatively, a jQuery UI theme could be loaded from a CDN, for example:​https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.21/themes/start/jquery-ui.css or​http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.21/themes/start/jquery-ui.css. (since 1.0)	(no default)
mainnav	Order of the items to display in the mainnav navigation bar, listed by IDs. See also TracNavigation.	wiki, timeline, roadmap, browser, tickets, newticket, search
metanav	Order of the items to display in the metanav navigation bar, listed by IDs. See also TracNavigation.	login, logout, prefs, help, about
mysqldump_path	Location of mysqldump for MySQL database backups	mysqldump
never_obfuscate_mailto	Never obfuscate mailto: links explicitly written in the wiki, even if show_email_addresses is false or the user doesn't have EMAIL_VIEW permission (since 0.11.6).	false
permission_policies	List of components implementing IPermissionPolicy, in the order in which they will be applied. These components manage fine-grained access control to Trac resources. Defaults to the DefaultPermissionPolicy? (pre-0.11 behavior) and LegacyAttachmentPolicy? (map ATTACHMENT_* permissions to realm specific ones)	DefaultPermissionPolicy, LegacyAttachmentPolicy
permission_store	Name of the component implementing IPermissionStore, which is used for managing user and group permissions.	DefaultPermissionStore
pg_dump_path	Location of pg_dump for Postgres database backups	pg_dump
repository_dir	Path to the default repository. This can also be a relative path (since 0.11). This option is deprecated, and repositories should be defined in the repositories section, or using the "Repositories" admin panel. (since 0.12)	(no default)
repository_sync_per_request	List of repositories that should be synchronized on every page request. Leave this option empty if you have set up post-commit hooks calling trac-admin $ENV changeset added on all your repositories (recommended). Otherwise, set it to a comma-separated list of repository names. Note that this will negatively affect performance, and will prevent changeset listeners from receiving events from the repositories specified here. The default is to synchronize the default repository, for backward compatibility. (since 0.12)	(default)
repository_type	Default repository connector type. (since 0.10) This is also used as the default repository type for repositories defined in TracIni#repositories-section repositories or using the "Repositories" admin panel. (since 0.12)	svn
request_filters	Ordered list of filters to apply to all requests (since 0.10).	(no default)
resizable_textareas	Make <textarea> fields resizable. Requires JavaScript. (since 0.12)	true
secure_cookies	Restrict cookies to HTTPS connections. When true, set the secure flag on all cookies so that they are only sent to the server on HTTPS connections. Use this if your Trac instance is only accessible through HTTPS. (since 0.11.2)	disabled
show_email_addresses	Show email addresses instead of usernames. If false, email addresses are obfuscated for users that don't have EMAIL_VIEW permission. (since 0.11)	false
show_ip_addresses	Show IP addresses for resource edits (e.g. wiki). Since 1.0.5 this option is deprecated and will be removed in 1.3.1. (since 0.11.3)	false
timeout	Timeout value for database connection, in seconds. Use '0' to specify no timeout. (Since 0.11)	20
use_base_url_for_redirect	Optionally use [trac] base_url for redirects. In some configurations, usually involving running Trac behind a HTTP proxy, Trac can't automatically reconstruct the URL that is used to access it. You may need to use this option to force Trac to use the base_url setting also for redirects. This introduces the obvious limitation that this environment will only be usable when accessible from that URL, as redirects are frequently used. (since 0.10.5)	disabled
use_chunked_encoding	If enabled, send contents as chunked encoding in HTTP/1.1. Otherwise, send contents with Content-Length header after entire of the contents are rendered. (since 1.0.6)	false
use_xsendfile	When true, send a X-Sendfile header and no content when sending files from the filesystem, so that the web server handles the content. This requires a web server that knows how to handle such a header, like Apache with mod_xsendfile or lighttpd. (since 1.0)	false
wiki_toolbars	Add a simple toolbar on top of Wiki <textarea>s. (since 1.0.2)	true
xsendfile_header	The header to use if use_xsendfile is enabled. If Nginx is used, set X-Accel-Redirect. (since 1.0.6)	X-Sendfile
[versioncontrol]
allowed_repository_dir_prefixes	Comma-separated list of allowed prefixes for repository directories when adding and editing repositories in the repository admin panel. If the list is empty, all repository directories are allowed. (since 0.12.1)	(no default)
[wiki]
ignore_missing_pages	Enable/disable highlighting CamelCase links to missing pages (since 0.9).	false
max_size	Maximum allowed wiki page size in characters. (since 0.11.2)	262144
render_unsafe_content	Enable/disable the use of unsafe HTML tags such as <script> or <embed> with the HTML WikiProcessor (since 0.10.4). For public sites where anonymous users can edit the wiki it is recommended to leave this option disabled (which is the default).	false
safe_schemes	List of URI schemes considered "safe", that will be rendered as external links even if [wiki] render_unsafe_content is false. (since 0.11.8)	cvs, file, ftp, git, irc, http, https, news, sftp, smb, ssh, svn, svn+ssh
split_page_names	Enable/disable splitting the WikiPageNames with space characters (since 0.10).	false
See also: TracGuide, TracAdmin, TracEnvironment

Last modified 3 years ago
Download in other formats:
Plain Text
